---
- name: create root
  file: path={{ bookstack_root }} state=directory mode=0775 owner=www-data group=www-data

- name: clone repo
  git: repo={{ bookstack_repo }} dest={{ bookstack_root }} update=no version=release
  become: yes
  become_user: www-data

- name: set permissions
  file: path={{ item }} state=directory mode=0775
  with_items:
    - "{{ bookstack_root }}/storage"
    - "{{ bookstack_root }}/bootstrap/cache"
    - "{{ bookstack_root }}/public/uploads"

- name: create db
  mysql_db: name={{ bookstack_db_name }} state=present encoding=utf8 login_user=root login_password={{ mariadb_pw }} login_host=127.0.0.1

- name: create db user
  mysql_user: name={{ bookstack_db_user }} password={{ bookstack_db_pass }} host={{ ansible_docker0.ipv4.address }} priv={{ bookstack_db_name }}.*:ALL state=present login_user=root login_password={{ mariadb_pw }} login_host=127.0.0.1

- name: run composer
  command: composer install
  args:
    chdir: "{{ bookstack_root }}"
  become: yes
  become_user: www-data

- name: write config
  template: src=env.j2 dest={{ bookstack_root }}/.env owner=www-data group=www-data

- name: run migrations
  command: php artisan migrate -n --force
  args:
    chdir: "{{ bookstack_root }}"
  become: yes
  become_user: www-data

- name: Write site
  template: src=nginx.j2 dest=/etc/nginx/sites-available/01-{{ bookstack_domain }}.conf
  notify: reload nginx

- name: Link site
  file: src=/etc/nginx/sites-available/01-{{ bookstack_domain }}.conf dest=/etc/nginx/sites-enabled/01-{{ bookstack_domain }}.conf state=link
  notify: reload nginx

- name: Generate SSL cert
  command: "{{ le_cmd }} -d {{ bookstack_domain }}"
