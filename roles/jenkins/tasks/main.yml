---
- name: Add jenkins apt-key
  apt_key: url={{jenkins.key}} state=present
  tags: jenkins

- name: Add Jenkins repository
  apt_repository: repo="{{jenkins.repo}}" state=present
  tags: jenkins

- name: Remove invalid Jenkins src repository
  command: sed --in-place '/deb-src.*pkg.jenkins-ci/d' /etc/apt/sources.list
  tags: jenkins

- name: Install dependencies
  apt: pkg={{item}} state=installed update-cache=yes
  with_items: jenkins.dependencies
  tags: jenkins

- name: Install Jenkins
  apt: pkg=jenkins state=latest update-cache=yes
  register: jenkins_install
  tags: jenkins

- name: Start jenkins
  service: name=jenkins state=started
  tags: jenkins

- name: Wait for jenkins
  wait_for: port=8080 delay=10
  tags: jenkins

- name: "Create Jenkins CLI destination directory: {{jenkins.dest}}"
  file: path={{jenkins.dest}} state=directory
  tags: jenkins

- name: Get Jenkins CLI
  get_url: url=http://localhost:8080/jnlpJars/jenkins-cli.jar dest={{jenkins.cli_dest}} mode=0440
  tags: jenkins

- name: Get Jenkins updates
  get_url: url=http://updates.jenkins-ci.org/update-center.json dest={{jenkins.updates_dest}} thirsty=yes mode=0440
  register: jenkins_updates
  tags: jenkins

- name: Update-center Jenkins
  shell: "cat {{jenkins.updates_dest}} | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:8080/updateCenter/byId/default/postBack"
  when: jenkins_updates.changed
  tags: jenkins

- name: Install/update plugins
  command: java -jar {{jenkins.cli_dest}} -s http://localhost:8080 install-plugin {{item}}
  when: jenkins.plugins is defined and jenkins_updates.changed
  with_items: jenkins.plugins
  tags: jenkins

# Wait for Jenkins to install plugins, assuming 10s should be sufficiant
- name: 10s delay while installing plugins
  wait_for: port=8080 delay=10
  when: jenkins_updates.changed
  tags: jenkins

- name: Safe-restart Jenkins
  command: java -jar {{jenkins.cli_dest}} -s http://localhost:8080 safe-restart
  when: jenkins_updates.changed
  tags: jenkins

- name: Copy Jenkins ssh key
  copy: src=../../../secrets/jenkins dest=/var/lib/jenkins/.ssh/id_rsa owner=jenkins mode=0600
  tags: jenkins

- name: Copy Jenkins ssh public key
  copy: src=../../../secrets/jenkins.pub dest=/var/lib/jenkins/.ssh/id_rsa.pub owner=jenkins mode=0644
  tags: jenkins

- name: Copy Jenkins ssh known hosts
  copy: src=known_hosts dest=/var/lib/jenkins/.ssh/known_hosts owner=jenkins mode=0644
  tags: jenkins

- name: Add jenkins htpasswd
  htpasswd: path=/etc/nginx/htpasswd/jenkins name={{jenkins.user}} password={{jenkins.password}} owner=root group=www-data mode=0640
  tags: jenkins

- name: Copy nginx site configuration
  template: src=nginx.conf.j2 dest=/etc/nginx/sites-available/{{jenkins.host}}.conf backup=yes
  notify: restart nginx
  tags: jenkins

- name: Link nginx site configuration
  file: src=/etc/nginx/sites-available/{{jenkins.host}}.conf path=/etc/nginx/sites-enabled/{{jenkins.host}}.conf state=link
  notify: restart nginx
  tags: jenkins
