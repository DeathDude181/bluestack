filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  } else if [type] == "rails" {
    grok {
      patterns_dir => ["/etc/logstash/conf.d/patterns"]
      match => [ "message", "^.?. \[%{RAILSISO:log_timestamp}[0-9]{3} #%{NUMBER:pid}.*\] .* -- : \[%{UUID:uuid}\] %{RAILSACTION:action}?.*$" ]
    }

    aggregate {
      task_id => "%{uuid}"
      code =>  '
        map.merge!(event) if map.empty?
        map["full_message"] ||= ""
        map["full_message"] += "\n" + event.get("message")
      '
      timeout => 60
      push_map_as_event_on_timeout => true
      timeout_code => "event.tag('aggregated')"
      aggregate_maps_path => "/var/lib/logstash/aggregate_maps"
    }

    if "aggregated" not in [tags] {
      drop {}
    }
  }
}
