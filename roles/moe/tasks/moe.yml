---

- name: Install packages for h5ai
  apt: name={{ item }} update_cache=yes state=latest cache_valid_time=86400
  with_items:
    - libav-tools
    - zip

- name: download moe
  get_url: url={{ moe_release_url }} dest=/tmp/{{ moe_archive }}

- name: create moe directory
  file: path={{ moe_root }} state=directory owner=www-data group=www-data

- name: unpack moe archive
  unarchive: >
    src=/tmp/{{ moe_archive }} dest={{ moe_root }} copy=no
    creates={{ moe_root }}/robots.txt
  notify: reload nginx

- name: download h5ai
  get_url: url={{ moe_stuff_url }} dest=/tmp/{{ moe_stuff_archive }} force=yes validate_certs=False

- name: create install directory
  file: path={{ moe_root }}/{{ moe_files }} state=directory owner=www-data group=www-data

- name: unpack h5ai archive
  unarchive: >
    src=/tmp/{{ moe_stuff_archive }} dest={{ moe_root }}/{{ moe_files }} copy=no
    creates={{ moe_root }}/{{ moe_files }}/_h5ai/public/index.php

- name: Write h5ai conf
  template: src=options.json.j2 dest={{ moe_root }}/{{ moe_files }}/_h5ai/private/conf/options.json

- name: ensure correct ownership
  file: path={{ moe_root }} owner=www-data group=www-data recurse=true state=directory

- name: Write site
  template: src=nginx.j2 dest=/etc/nginx/sites-available/01-{{ moe_domain }}.conf
  notify: reload nginx

- name: Link site
  file: src=/etc/nginx/sites-available/01-{{ moe_domain }}.conf dest=/etc/nginx/sites-enabled/01-{{ moe_domain }}.conf state=link
  notify: reload nginx

- name: Create files directory
  file: path={{ moe_root }}/{{ moe_files }} owner={{ moe_user }} group=www-data mode=750 state=directory

- name: Generate SSL cert
  command: "{{ le_cmd }} -d {{ moe_domain }}"
