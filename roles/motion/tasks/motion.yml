---
- name: install packages
  apt: name={{ item }} update_cache=yes state=latest cache_valid_time=86400
  with_items:
    - motion
    - ffmpeg
    - v4l-utils
    - python-pip
    - python-dev
    - curl
    - libssl-dev
    - libcurl4-openssl-dev
    - libjpeg-dev

- name: install motioneye
  pip: name=motioneye state=latest
  notify: restart motioneye

- name: create user
  user: name={{ motion_user }} home={{ motion_media_path }} createhome=no system=yes shell=/bin/bash groups=media append=yes

- name: create directories
  file: path={{ item.path }} owner={{ item.owner|default(motion_user) }} group={{ item.group|default("media") }} mode={{ item.mode|default("0700") }} state=directory
  with_items:
    - path: "{{ motion_conf_path }}"
    - path: "{{ motion_media_path }}"
      mode: "2775"
    - path: "{{ motion_run_path }}"
    - path: "{{ motion_log_path }}"

- name: create config file
  template: src=motioneye.conf.j2 dest=/etc/motioneye/motioneye.conf owner={{ motion_user }} group=media
  notify: restart motioneye

- name: install service
  template: src=motioneye.service.j2 dest=/etc/systemd/system/motioneye.service
  notify: restart motioneye

- name: enable service
  service: name=motioneye state=started enabled=yes

- name: Write site
  template: src=nginx.j2 dest=/etc/nginx/sites-available/01-{{ motion_domain }}.conf
  notify: reload nginx

- name: Link site
  file: src=/etc/nginx/sites-available/01-{{ motion_domain }}.conf dest=/etc/nginx/sites-enabled/01-{{ motion_domain }}.conf state=link
  notify: reload nginx

- name: Generate SSL cert
  command: "{{ le_cmd }} -d {{ motion_domain }}"
